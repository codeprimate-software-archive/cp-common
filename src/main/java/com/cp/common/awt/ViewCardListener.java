/*
 * ViewCardListener.java (c) 17 April 2001
 *
 * Copyright (c) 2001, Code Primate
 * All Rights Reserved
 * @auther John J. Blum
 * @version 2009.5.29
 * @see java.awt.event.ActionListener
 */

package com.cp.common.awt;

import com.cp.common.lang.Assert;
import java.awt.CardLayout;
import java.awt.Container;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

public class ViewCardListener implements ActionListener {

  private Container container;

  protected final Log logger = LogFactory.getLog(getClass());

  private String cardName;

  /**
   * Constructs an instance of the ViewCardListener class to listen for
   * card change events in a container that uses the CardLayout manager.
   *
   * @param container a Container using the Card Layout Manager.
   * @param cardName the String name of the card to switch to.
   */
  public ViewCardListener(final Container container, final String cardName) {
    setContainer(container);
    setCardName(cardName);
  }

  /**
   * Returns the name of the card in the CardLayout.
   * @return a String value representing the name of the card in the CardLayout.
   */
  public final String getCardName() {
    return cardName;
  }

  /**
   * Sets the card name of the card to switch to in the CardLayout.
   * @param cardName the name of the card in the CardLayout.
   */
  private void setCardName(final String cardName) {
    Assert.notEmpty(cardName, "(" + cardName + ") is not a valid card name!");
    this.cardName = cardName;
  }

  /**
   * Returns the container object which switches differnt cards in it's layout.
   * @return the container object.
   */
  public final Container getContainer() {
    return container;
  }

  /**
   * Sets the specified container using the CardLayout manager.
   * @param container the java.awt.Container object.
   * @throws java.lang.NullPointerException if the container object reference
   * is null.
   * @throws java.lang.IllegalArgumentException if the container object does
   * not use the CardLayout as it's layout manager.
   */
  private void setContainer(final Container container) {
    Assert.notNull(container, "The container cannot be null!");
    Assert.isInstanceOf(container.getLayout(), CardLayout.class, "The container must use the CardLayout manager!");
    this.container = container;
  }

  /**
   * Called by the event source, for which this listener registered itself by
   * calling the addActionListener method, passing a ActionEvent object containing
   * information concering the event.  The event source sends an ActionEvent to
   * this object notifying that the user has requested a change in the user
   * interface to display the card specified by "cardName" in the container
   * specified by "container".
   *
   * @param event an ActionEvent generated by the event source.
   */
  public void actionPerformed(final ActionEvent event) {
    final CardLayout cardLayoutManager = (CardLayout) getContainer().getLayout();
    cardLayoutManager.show(getContainer(), getCardName());
  }

}
